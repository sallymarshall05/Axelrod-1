import axelrod as axl
from typing import Dict, List, Optional, Tuple
from axelrod.action import Action
from axelrod.player import Player
import warnings
import matplotlib
import matplotlib.pyplot as plt
import numpy
from axelrod.strategies._strategies import *

"""This script runs the first & second axelrod tournaments, as well as the tournament ran by Steward & Plotkin, 
including my own strategy in all of them"""


axelrod_first = [FirstByDavis,
    FirstByFeld,
    FirstByGraaskamp,
    FirstByGrofman,
    FirstByJoss,
    FirstByNydegger,
    FirstByDowning,
    FirstByShubik,
    FirstBySteinAndRapoport,
    FirstByTidemanAndChieruzzi,
    FirstByTullock,
    FirstByAnonymous,
    TitForTat,
    Random,
    TheMarshall
    ]

axelrod_second = [SecondByAppold,
    SecondByBlack,
    SecondByBorufsen,
    SecondByCave,
    SecondByChampion,
    SecondByColbert,
    SecondByEatherley,
    SecondByGetzler,
    SecondByGladstein,
    SecondByGraaskampKatzen,
    SecondByHarrington,
    SecondByKluepfel,
    SecondByLeyvraz,
    SecondByMikkelson,
    SecondByGrofman,
    SecondByTidemanAndChieruzzi,
    SecondByRichardHufford,
    SecondByRowsam,
    SecondByTester,
    SecondByTranquilizer,
    SecondByWeiner,
    SecondByWhite,
    SecondByWmAdams,
    SecondByYamachi,
    GoByMajority,
    Grudger,
    RevisedDowning,
    TitFor2Tats,
    TitForTat,
    WinStayLoseShift,
    Random,
    TheMarshall
    ]

stewart_and_plotkin = [Cooperator,
    Defector,
    ZDExtort2,
    HardGoByMajority,
    FirstByJoss,
    HardTitForTat,
    HardTitFor2Tats,
    TitForTat,
    Grudger,
    GTFT,
    TitFor2Tats,
    WinStayLoseShift,
    Random,
    ZDGTFT2,
    TheMarshall
    ]

all = [
    ALLCorALLD,
    AON2,
    APavlov2006,
    APavlov2011,
    Adaptive,
    AdaptiveTitForTat,
    AdaptorBrief,
    AdaptorLong,
    Aggravater,
    Alexei,
    Alternator,
    AlternatorHunter,
    AntiCycler,
    AntiTitForTat,
    Appeaser,
    ArrogantQLearner,
    AverageCopier,
    BackStabber,
    BetterAndBetter,
    Bully,
    BushMosteller,
    Calculator,
    Capri,
    CautiousQLearner,
    CollectiveStrategy,
    ContriteTitForTat,
    Cooperator,
    CooperatorHunter,
    CycleHunter,
    CyclerCCCCCD,
    CyclerCCCD,
    CyclerCCCDCD,
    CyclerCCD,
    CyclerDC,
    CyclerDDC,
    DBS,
    Darwin,
    Defector,
    DefectorHunter,
    DelayedAON1,
    Desperate,
    Detective,
    DoubleCrosser,
    DoubleResurrection,
    Doubler,
    DynamicTwoTitsForTat,
    EasyGo,
    EugineNier,
    EventualCycleHunter,
    EvolvedANN,
    EvolvedANN5,
    EvolvedANNNoise05,
    EvolvedFSM16,
    EvolvedFSM16Noise05,
    EvolvedFSM4,
    EvolvedFSM6,
    EvolvedHMM5,
    EvolvedLookerUp1_1_1,
    EvolvedLookerUp2_2_2,
    FirmButFair,
    FirstByAnonymous,
    FirstByDavis,
    FirstByDowning,
    FirstByFeld,
    FirstByGraaskamp,
    FirstByGrofman,
    FirstByJoss,
    FirstByNydegger,
    FirstByShubik,
    FirstBySteinAndRapoport,
    FirstByTidemanAndChieruzzi,
    FirstByTullock,
    FoolMeOnce,
    ForgetfulFoolMeOnce,
    ForgetfulGrudger,
    Forgiver,
    ForgivingTitForTat,
    Fortress3,
    Fortress4,
    GTFT,
    GeneralSoftGrudger,
    GoByMajority,
    GoByMajority10,
    GoByMajority20,
    GoByMajority40,
    GoByMajority5,
    Golden,
    Gradual,
    GradualKiller,
    Grudger,
    GrudgerAlternator,
    Grumpy,
    Handshake,
    HardGoByMajority,
    HardGoByMajority10,
    HardGoByMajority20,
    HardGoByMajority40,
    HardGoByMajority5,
    HardProber,
    HardTitFor2Tats,
    HardTitForTat,
    HesitantQLearner,
    Hopeless,
    Inverse,
    InversePunisher,
    KnowledgeableWorseAndWorse,
    LevelPunisher,
    LimitedRetaliate,
    LimitedRetaliate2,
    LimitedRetaliate3,
    MEM2,
    MathConstantHunter,
    Michaelos,
    NTitsForMTats,
    NaiveProber,
    Negation,
    NiceAverageCopier,
    OmegaTFT,
    OnceBitten,
    OppositeGrudger,
    OriginalGradual,
    PSOGambler1_1_1,
    PSOGambler2_2_2,
    PSOGambler2_2_2_Noise05,
    PSOGamblerMem1,
    Pi,
    Predator,
    Prober,
    Prober2,
    Prober3,
    Prober4,
    Pun1,
    Punisher,
    Raider,
    Random,
    RandomHunter,
    RandomTitForTat,
    RemorsefulProber,
    Resurrection,
    Retaliate,
    Retaliate2,
    Retaliate3,
    RevisedDowning,
    Ripoff,
    RiskyQLearner,
    SecondByAppold,
    SecondByBlack,
    SecondByBorufsen,
    SecondByCave,
    SecondByChampion,
    SecondByColbert,
    SecondByEatherley,
    SecondByGetzler,
    SecondByGladstein,
    SecondByGraaskampKatzen,
    SecondByGrofman,
    SecondByHarrington,
    SecondByKluepfel,
    SecondByLeyvraz,
    SecondByMikkelson,
    SecondByRichardHufford,
    SecondByRowsam,
    SecondByTester,
    SecondByTidemanAndChieruzzi,
    SecondByTranquilizer,
    SecondByWeiner,
    SecondByWhite,
    SecondByWmAdams,
    SecondByYamachi,
    SelfSteem,
    ShortMem,
    SlowTitForTwoTats2,
    SneakyTitForTat,
    SoftGrudger,
    SoftJoss,
    SolutionB1,
    SolutionB5,
    SpitefulTitForTat,
    SpitefulCC,
    Stalker,
    StochasticCooperator,
    StochasticWSLS,
    SuspiciousTitForTat,
    TF1,
    TF2,
    TF3,
    ThueMorse,
    ThueMorseInverse,
    Thumper,
    TitFor2Tats,
    TitForTat,
    TrickyCooperator,
    TrickyDefector,
    TrickyLevelPunisher,
    TwoTitsForTat,
    UsuallyCooperates,
    UsuallyDefects,
    VeryBad,
    Willing,
    WinShiftLoseStay,
    Winner12,
    Winner21,
    WorseAndWorse,
    WorseAndWorse2,
    WorseAndWorse3,
    ZDExtort2,
    ZDExtort2v2,
    ZDExtort3,
    ZDExtort4,
    ZDExtortion,
    ZDGTFT2,
    ZDGen2,
    ZDMem2,
    ZDMischief,
    ZDSet2,
    e,
    TheMarshall
]

""""Run tournament 1 """
players_axl1 = [s() for s in axelrod_first] # Create players competing in round 1
tournament1 = axl.Tournament(players_axl1, turns=200, seed=1)  # Create a tournament 1
results1 = tournament1.play()  # Play tournament 1
print(results1.ranked_names) #print results of tournament 1


"""Run tournament 2"""
players_axl2 = [s() for s in axelrod_second] # Create players competing in round 2
tournament2 = axl.Tournament(players_axl2, turns=200, seed=1)  # Create a tournament 2
results2 = tournament2.play()  # Play the tournament 2
print(results2.ranked_names) #print results of tournament 1

"""Run tournament 3 - Steward & Plotkin"""
players_axl3 = [s() for s in stewart_and_plotkin] # Create players competing in round 3
tournament3 = axl.Tournament(players_axl3, turns=200, seed=1) # Create a tournament 3
results3 = tournament3.play()  # Play the tournament 3
print(results3.ranked_names) #print results of tournament 3
